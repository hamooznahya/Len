plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.17"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}


android {
    namespace 'com.bemotioninc.sss'
    compileSdk 32

    defaultConfig {
        applicationId "com.bemotioninc.sss"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    //retrofit2
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //dagger
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.0-alpha03'

    implementation 'androidx.paging:paging-common-ktx:3.1.1'

    implementation 'androidx.leanback:leanback-paging:1.1.0-alpha07'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.8'
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt"

//lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation group: 'androidx.lifecycle', name: 'lifecycle-runtime-ktx', version: '2.4.0'
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'

    //sdp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //Floating Action menu
    implementation 'com.github.clans:fab:1.6.4'

    //GlideImage
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    //protoDataStore

    implementation "androidx.datastore:datastore-core:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.18.0"

    implementation 'com.github.mrmike:ok2curl:0.8.0'

    //Create Excel file
    implementation 'org.apache.poi:poi:3.17'


    implementation platform('com.google.firebase:firebase-bom:30.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'


    //Location
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    //circleindicator
    implementation "me.relex:circleindicator:2.1.6"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}